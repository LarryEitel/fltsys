#!wing
#!version=4.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.show-args-dialog = {loc('kml.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'cyTlbCAUmxSyeyLIVHJME2EKxq'\
        'uBTuPh',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(0,)],
                                 'selected-nodes': [(4,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4,
                          5],
        'notebook_display': 'tabs only',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 3,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 2,
                       'sel-line-start': 148,
                       'selection_end': 152,
                       'selection_start': 152}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'    ',
                                       'fReverse': False,
                                       'fSearchText': u'gunicorn',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('../manage.py')],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'column-widths': [0.44320712694877507,
        0.55679287305122493],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('../world/models.py'),
        {'attrib-starts': [('WorldBorder',
                            2)],
         'first-line': 0,
         'folded-linenos': [],
         'sel-line': 21,
         'sel-line-start': 783,
         'selection_end': 821,
         'selection_start': 821},
        1326741277.75),
        [loc('index.html'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1326760670.378],
        (loc('../world/models.py'),
         {'attrib-starts': [('WorldBorder',
                             2)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 783,
          'selection_end': 821,
          'selection_start': 821},
         1326760679.336),
        (loc('kml.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 73,
          'sel-line-start': 2228,
          'selection_end': 2249,
          'selection_start': 2249},
         1326760682.9719999),
        (loc('blocks.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 39,
          'sel-line-start': 1052,
          'selection_end': 1095,
          'selection_start': 1089},
         1326761072.27),
        [loc('../address/models.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1326761106.6259999],
        (loc('blocks.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 39,
          'sel-line-start': 1052,
          'selection_end': 1095,
          'selection_start': 1089},
         1326761108.5369999),
        [loc('../world/models.py'),
         {'attrib-starts': [('WorldBorder',
                             2)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 783,
          'selection_end': 821,
          'selection_start': 821},
         1326761110.3640001],
        (loc('blocks.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 39,
          'sel-line-start': 1052,
          'selection_end': 1095,
          'selection_start': 1089},
         1326761112.915),
        (loc('../settings.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 290,
          'selection_end': 345,
          'selection_start': 309},
         1326761114.0369999),
        (loc('kml.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 93,
          'sel-line-start': 2534,
          'selection_end': 2594,
          'selection_start': 2594},
         1326761115.2249999),
        (loc('blocks.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 39,
          'sel-line-start': 1052,
          'selection_end': 1095,
          'selection_start': 1089},
         1326761380.8239999),
        (loc('kml.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 8,
          'sel-line-start': 136,
          'selection_end': 156,
          'selection_start': 156},
         1326761390.875),
        (loc('../private/kml/territory_boundaries.kml'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1326761520.1500001),
        (loc('kml.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 12,
          'sel-line-start': 290,
          'selection_end': 321,
          'selection_start': 321},
         1326761560.352),
        (loc('blocks.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 5,
          'sel-line-start': 78,
          'selection_end': 134,
          'selection_start': 106},
         1326762802.517),
        (loc('kml.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 4,
          'sel-line-start': 80,
          'selection_end': 106,
          'selection_start': 106},
         1326762806.204),
        (loc('kml.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 1,
          'sel-line-start': 19,
          'selection_end': 19,
          'selection_start': 19},
         1326762955.7820001),
        [loc('../../../../_x/bin/wingdbstub.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1326763732.9809999],
        [loc('kml.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 1,
          'sel-line-start': 19,
          'selection_end': 19,
          'selection_start': 19},
         1326763777.882]],
        19),
        'current-loc': loc('kml.py'),
        'editor-states': {loc('kml.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 19,
        'selection_end': 19,
        'selection_start': 19},
                          loc('../wingdbstub.py'): {'attrib-starts': [],
        'first-line': 95,
        'folded-linenos': [],
        'sel-line': 112,
        'sel-line-start': 4702,
        'selection_end': 4744,
        'selection_start': 4744}},
        'has-focus': True},
                               'open_files': [u'../wingdbstub.py',
        u'kml.py']},
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.68460575719649563},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (107,
                         134,
                         1260,
                         742)},
        {'name': 'ZN61BXtthIaQwBI4IrLLmg4QqZ9T0XEw',
         'size-state': '',
         'type': 'panel-tall',
         'view': {'area': 'window-wide',
                  'constraint': None,
                  'current_pages': [0],
                  'override_title': None,
                  'pagelist': [('debug-probe',
                                'window-wide',
                                2,
                                {'attrib-starts': [],
                                 'first-line': 0,
                                 'folded-linenos': [],
                                 'history': {None: ["render_to_response('hom"\
        "e/base.html', {'STATIC_URL': settings.STATIC_URL})\n",
        "print render_to_response('home/base.html', {'STATIC_URL': settings."\
        "STATIC_URL})\n"],
        u'file:C:/Python27/Scripts/acdha-virtualenv-8084899/virtualenv.py': [''\
        'sys.prefix\x0d\n'],
        u'file:C:/Users/Larry/_db/_x/web2py.py': ['len(form.vars.q < 10)\n',
        'x.searchform()\n',
        'auth.user_group\n',
        'auth.user.id\n',
        'form[0]\n',
        'form[0].attributes\n',
        "form[0].attributes['name']\n",
        "not form[0].attributes['value']\n",
        "form[0].attributes['value']\n",
        "form[0].attributes['value'] == ''\n",
        "type(form[0].attributes['value'])\n",
        "form[0].attributes['value'] == None\n",
        'request.env.query_string\n',
        's = request.env.query_string\n',
        's\n',
        "s.split('&')\n",
        "params - s.split('&')\n",
        "params = s.split('&')\n",
        'params\n',
        'params[0]\n',
        "params[0][0] == 'q'\n",
        "params[0].split('=')\n",
        "params[0].split('=')[1]\n",
        "params[0].split('=')[1].strip()\n"],
        u'file:C:/_f/py/blocks.py': ['points_inside_poly([(5,9)], poly_verts'\
                                     ')\x0d\n',
                                     'points_inside_poly((5,9), poly_verts)\x0d'\
                                     '\n',
                                     'points_inside_poly([(2,8)], poly_verts'\
                                     ')\x0d\n',
                                     'points_inside_poly([(0,8)], poly_verts'\
                                     ')\x0d\n',
                                     'points_inside_poly([(3,8)], poly_verts'\
                                     ')\x0d\n',
                                     'points_inside_poly([(3,10)], poly_vert'\
                                     's)\x0d\n',
                                     "[(pt['lat'], pt['lng']) for pt in bloc"\
                                     "ks_polygons['pts']]\x0d\n",
                                     "[(block['lat'], block['lng']) for bloc"\
                                     "k in blocks_numbers]\x0d\n",
                                     'block_numbers\x0d\n',
                                     'block_numbers[0]\x0d\n',
                                     "[(block['lat'], block['lng']) for bloc"\
                                     "k in block_numbers]\x0d\n",
                                     'mask\x0d\n',
                                     '[i for i in enumerate(mask) if mask[i]'\
                                     ']\x0d\n',
                                     'mask[0]\x0d\n',
                                     '[i for i in range(mask) if mask[i]]\x0d'\
                                     '\n',
                                     'len(mask)\x0d\n',
                                     '[i for i in len(mask) if mask[i]]\x0d\n',
                                     'for i in enumerate(mask):\x0d\n  print'\
                                     ' i;\x0d\n\x0d\n',
                                     '[i for i, b in enumerate(mask) if b]\x0d'\
                                     '\n',
                                     'pts[0]\x0d\n',
                                     'pnts[0]\x0d\n',
                                     'points_inside_poly([pnts[0]], poly_ver'\
                                     'ts)\x0d\n',
                                     'poly_verts\x0d\n',
                                     'points_inside_poly([(-84.2230754713311'\
                                     '3, 9.900431813992872)], poly_verts)\x0d'\
                                     '\n',
                                     'poly_verts = [(-84.22307547133113, 9.9'\
                                     '00431813992872), (-84.22297662549559, '\
                                     '9.900286579063486), (-84.2227960089079'\
                                     '9, 9.900174911616709)]\x0d\n',
                                     'poly_verts = [(-84.2, 9.9), (-84.2, 9.'\
                                     '9), (-85.2, 8.9)]\x0d\n',
                                     'points_inside_poly([(-84.3, 9.0)], pol'\
                                     'y_verts)\x0d\n',
                                     'poly_verts = [(1, 1), (1, 10), (10, 1)'\
                                     ', (10, 10)]\x0d\n',
                                     'points_inside_poly([(5, 5)], [(1, 1), '\
                                     '(1, 10), (10, 1), (10, 10)])\x0d\n',
                                     "[[pt['lat'], pt['lng']] for pt in bloc"\
                                     "k_polygon['pts']]\x0d\n",
                                     'block_polygon\x0d\n',
                                     'import cPickle as pickle\x0d\n',
                                     'pickle.dump( new_blocks, open( "blocks'\
                                     '.pkl", "wb" ) )\x0d\n',
                                     'blocks[0]\x0d\n',
                                     "blocks[0]['lng']\x0d\n",
                                     "blocks[0]['pts']\x0d\n",
                                     "pts = blocks[0]['pts']\x0d\n",
                                     'pts\x0d\n',
                                     "[[pt['lng'], pt['lng']] for pt in pts]"\
                                     "\x0d\n",
                                     "[[pt['lng'], pt['lat']] for pt in pts]"\
                                     "\x0d\n",
                                     'new_blocks[0]\x0d\n'],
        u'file:C:/_f/py/house_pts.py': ["[house_pt['lat'], house_pt['lng']]\x0d"\
        "\n",
        'house_pt\x0d\n'],
        u'file:c:/Users/Larry/_db/_x/web2py.py': ['cts.__repr__()\n'],
        u'file:c:/_f/py/kml.py': ['xml\x0d\n',
                                  'pt\x0d\n',
                                  "pt.split(',')\x0d\n",
                                  "strpt = pt.split(',')\x0d\n",
                                  'strpt\x0d\n',
                                  'strpt[0]\x0d\n',
                                  'float(strpt[0])\x0d\n',
                                  'float(strpt[0]) + 100\x0d\n',
                                  'ptstring\x0d\n',
                                  "ptstring.split(',')\x0d\n",
                                  "[float(n) for n in ptstring.split(',')]\x0d"\
                                  "\n",
                                  'blocks[0]\x0d\n',
                                  'blocks[1]\x0d\n'],
        u'file:c:/_flt/flt/import.py': ["os.environ['DJANGO_SETTINGS_MODULE'"\
        "] ='settings'\x0d\n",
        'from django.core.management import setup_environ\x0d\n',
        'from flt import settings\x0d\n',
        'locals\x0d\n',
        'locals()\x0d\n',
        'os.path.dirname(__file__)\x0d\n',
        'sys.path.append("c:\\\\_flt")\x0d\n',
        'from flt import flt.settings\x0d\n',
        'sys.path\x0d\n',
        'from flt.apps.boundaries.models import *\x0d\n',
        'b.name\x0d\n',
        "open('static/distritos.txt').readlines()\x0d\n",
        'lines[0].strip()\x0d\n',
        'lines[0][3:]\x0d\n',
        'lines[0][3:].strip()\x0d\n',
        'line[0][3:]\x0d\n',
        "province, canton, distrito, zip = line.split(',')\x0d\n",
        'Boundary.objects.get(name = province)\x0d\n',
        'Boundary.objects.get(name = province, boundary_type_id = 8)\x0d\n',
        'Boundary.objects.filter(name = province, boundary_type_id = 8)\x0d\n',
        'Boundary.objects.filter(name = province)\x0d\n',
        'b = Boundary.objects.filter(name = province)\x0d\n',
        'b = Boundary.objects.filter(name = province).filter(boundary_type_i'\
        'd = 8)\x0d\n',
        'b[0]\x0d\n',
        'b[0].name\x0d\n',
        'b[0].boundary_type_id\x0d\n',
        'b = Boundary.objects.filter(boundary_type_id = 8)\x0d\n',
        'b = Boundary.objects.filter(name = province).filter(boundary_type ='\
        ' 8)\x0d\n',
        'related_boundary, created = BoundariesRelated.objects.get_or_create'\
        '(',
        "first_name='John', last_name='Lennon',\x0d\n\x0d\n",
        "related_boundary, created = BoundariesRelated.objects.get_or_create"\
        "(parent_id=1, boundary_id=23, created='2011-12-31 19:21:59', modifi"\
        "ed='2011-12-31 19:21:59', owner_id=1, modified_id=1)\x0d\n",
        "related_boundary, created = BoundariesRelated.objects.get_or_create"\
        "(parent_id=1, boundary_id=23, created='2011-12-31 19:21:59', modifi"\
        "ed='2011-12-31 19:21:59', owner_id=1, modifier_id=1)\x0d\n",
        "related_boundary, created = BoundariesRelated.objects.get_or_create"\
        "(Boundary.objects.get(id = 1), boundary_id=bndry.id, created='2011-"\
        "12-31 19:21:59', modified='2011-12-31 19:21:59', owner_id=1, modifi"\
        "er_id=1)\x0d\n",
        'boundary_related.child = bndry\x0d\n',
        'boundary_related.save()\\\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\\\x0d\n\x0d'\
        '\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n'\
        '\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n\x0d\nd\x0d\n)\x0d\n}\x0d\n\x0d\n',
        'boundary_related.save()\x0d\n',
        'bndry.add_parent(Boundary.objects.get(id = 1))\x0d\n',
        'Boundary.objects.get(id = 1)\x0d\n',
        'b = Boundary.objects.get(id = 1)\x0d\n',
        "BoundariesRelated.objects.get_or_create(parent_id=1, boundary_id=bn"\
        "dry.id, created='2011-12-31 19:21:59', modified='2011-12-31 19:21:5"\
        "9', owner_id=1, modifier_id=1)\x0d\n",
        "BoundariesRelated.objects.get_or_create(parent_id=Boundary.objects."\
        "get(id = 1), boundary_id=bndry.id, created='2011-12-31 19:21:59', m"\
        "odified='2011-12-31 19:21:59', owner_id=1, modifier_id=1)\x0d\n",
        "BoundariesRelated.objects.get_or_create(parent_id=Boundary.objects."\
        "get(id = 1), boundary_id=bndry, created='2011-12-31 19:21:59', modi"\
        "fied='2011-12-31 19:21:59', owner_id=1, modifier_id=1)\x0d\n",
        "related_boundary, created = BoundariesRelated.objects.get_or_create"\
        "(parent_id=Boundary.objects.get(id = 1), boundary_id=bndry, created"\
        "='2011-12-31 19:21:59', modified='2011-12-31 19:21:59', owner_id=1,"\
        " modifier_id=1)\x0d\n",
        "related_boundary, created = BoundariesRelated.objects.get_or_create"\
        "(\x0d\n          parent_id = Boundary.objects.get(id = bndry.parent"\
        "_number),\x0d\n          boundary_id = bndry, \x0d\n          creat"\
        "ed = '2011-12-31 19:21:59', \x0d\n          modified = '2011-12-31 "\
        "19:21:59', \x0d\n          owner_id = 1, \x0d\n          modifier_i"\
        "d = 1\x0d\n     )\x0d\n\x0d\n",
        "related_boundary, created = BoundariesRelated.objects.get_or_create"\
        "(\x0d\n          parent = Boundary.objects.get(id = bndry.parent_nu"\
        "mber),\x0d\n          boundary = bndry, \x0d\n          created = '"\
        "2011-12-31 19:21:59', \x0d\n          modified = '2011-12-31 19:21:"\
        "59', \x0d\n          owner_id = 1, \x0d\n          modifier_id = 1\x0d"\
        "\n     )\x0d\n\x0d\n",
        'BoundariesRelated.objects.get(parent_id=1)\x0d\n',
        'BoundariesRelated.objects.get(parent.name="Cartago")\x0d\n',
        'BoundariesRelated.objects.get(parent__name="Cartago")\x0d\n',
        'BoundariesRelated.objects.get(parent__name="Cartago", child__name="'\
        'Alajuela")\x0d\n',
        'BoundariesRelated.objects.get(parent__name="Alajuela", child__name='\
        '"Upala")\x0d\n',
        'BoundariesRelated.objects.get(parent__name="Alajuela", child__name='\
        '"Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(boundary_type_id = 9, parent__name="A'\
        'lajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(from_boundary.boundary_type_id = 9, p'\
        'arent__name="Alajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(from_boundary__boundary_type_id = 9, '\
        'parent__name="Alajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(Boundary__from_boundary__boundary_typ'\
        'e_id = 9, parent__name="Alajuela", child__name="Upala").child_id\x0d'\
        '\n',
        'BoundariesRelated.objects.get(parent__boundary_type_id = 9, parent_'\
        '_name="Alajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(parent__boundary_type = 9, parent__na'\
        'me="Alajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(parent__boundary_type__boundary_type_'\
        'id = 9, parent__name="Alajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(parent__boundary_type.id = 9, parent_'\
        '_name="Alajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(parent__boundary_type__id = 9, parent'\
        '__name="Alajuela", child__name="Upala").child_id\x0d\n',
        'br = BoundariesRelated.objects.get(parent__name="Alajuela", child__'\
        'name="Upala")\x0d\n',
        'br.parent.boundary_type_id\x0d\n',
        'BoundariesRelated.objects.get(child__boundary_type__id = 9, parent_'\
        '_name="Alajuela", child__name="Upala").child_id\x0d\n',
        'BoundariesRelated.objects.get(parent__name="Alajuela", child__name='\
        '"Upala", child__boundary_type__title = "Canton").child_id\x0d\n',
        'BoundaryType.objects.get(id = 10)\x0d\n',
        "cursor.execute(\"UPDATE flt_b SET Points = GeomFromText( 'POLYGON(("\
        "0 0, 10 0, 10 10, 0 10, 0 0)) ) WHERE id = 1\")\x0d\n",
        "cursor.execute(\"UPDATE flt_b SET Points = GeomFromText( 'POLYGON(("\
        "0 0, 10 0, 10 10, 0 10, 0 0))' ) WHERE id = 1\")\x0d\n",
        "\"UPDATE flt_b SET Points = GeomFromText( 'POLYGON((%s))' ) WHERE i"\
        "d = %d\", (self.pts, self.id)\x0d\n",
        "\"UPDATE flt_b SET Points = GeomFromText( 'POLYGON((%s))' ) WHERE i"\
        "d = %d\" % (self.pts, self.id)\x0d\n",
        'self.id\x0d\n',
        'b\x0d\n',
        'cursor.execute("SELECT AsText(Points) as pts FROM flt_b WHERE id = '\
        '%d", self.id)\x0d\n',
        'cursor.execute("SELECT AsText(Points) as p FROM flt_b WHERE id = %d'\
        '", self.id)\x0d\n',
        '"SELECT AsText(Points) as pts FROM flt_b WHERE id = %d", self.id\x0d'\
        '\n',
        '"SELECT AsText(Points) as pts FROM flt_b WHERE id = %d LIMIT 1" % s'\
        'elf.id\x0d\n',
        'cursor.execute("SELECT AsText(Points) as pts FROM flt_b WHERE id = '\
        '%d LIMIT 1" % self.id)\x0d\n',
        'row = cursor.fetchone()\x0d\n',
        "row['pts']\x0d\n",
        'row[0]\x0d\n',
        'row\x0d\n',
        "r.replace('POLYGON((','')\x0d\n",
        'r = row[0]\x0d\n',
        "r.replace('POLYGON((','').replace('))')\x0d\n",
        "r.replace('POLYGON((','').replace('))','')\x0d\n",
        "r.replace('POLYGON((','').replace('))','').split(',')\x0d\n",
        "t(',')\x0d\nr = row[0].replace('POLYGON((','').replace('))','').spl"\
        "it(',')\x0d\n\x0d\n",
        "row[0].replace('POLYGON((','').replace('))','').split(',')\x0d\n",
        "r = row[0].replace('POLYGON((','').replace('))','').split(',')\x0d\n",
        'r\x0d\n',
        'b.poly\x0d\n']},
                                 'sel-line': 0,
                                 'sel-line-start': 0,
                                 'selection_end': 0,
                                 'selection_start': 0})],
                  'split_percents': {},
                  'splits': 1,
                  'tab_location': 'top',
                  'user_data': {}},
         'window-alloc': (1747,
                          567,
                          922,
                          413)},
        {'name': 'D16SxSD8HERpzSs6h7bNAsTA4TALOuhY',
         'size-state': '',
         'type': 'panel-tall',
         'view': {'area': 'window-wide',
                  'constraint': None,
                  'current_pages': [0],
                  'override_title': None,
                  'pagelist': [('debug-data',
                                'window-wide',
                                1,
                                {})],
                  'split_percents': {},
                  'splits': 1,
                  'tab_location': 'top',
                  'user_data': {}},
         'window-alloc': (2397,
                          238,
                          783,
                          695)}]}
guimgr.recent-documents = [loc('kml.py'),
                           loc('../wingdbstub.py')]
proj.env-vars = {None: ('default',
                        ['']),
                 loc('kml.py'): ('project',
                                 [''])}
